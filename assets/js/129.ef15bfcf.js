(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{652:function(t,e,n){"use strict";n.r(e);var s=n(11),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"前端工程"}},[t._v("前端工程")]),t._v(" "),n("p",{attrs:{align:"center"}},[n("a",{attrs:{href:"https://icyfenix.cn",target:"_blank"}},[n("img",{attrs:{width:"180",src:"https://icyfenix.cn/images/logo-color.png",alt:"logo"}})])]),t._v(" "),n("p",{attrs:{align:"center"}},[n("a",{staticStyle:{display:"inline-block"},attrs:{href:"https://iycfenix.cn"}},[n("img",{attrs:{src:"https://icyfenix.cn/images/Release-v1.svg"}})]),t._v(" "),n("a",{staticStyle:{display:"inline-block"},attrs:{href:"https://travis-ci.com/fenixsoft/fenix-bookstore-frontend",target:"_blank"}},[n("img",{attrs:{src:"https://api.travis-ci.com/fenixsoft/fenix-bookstore-frontend.svg?branch=master",alt:"Travis-CI"}})]),t._v(" "),n("a",{staticStyle:{display:"inline-block"},attrs:{href:"https://creativecommons.org/licenses/by/4.0/",target:"_blank"}},[n("img",{attrs:{src:"https://icyfenix.cn/images/DocLicense-CC-red.svg",alt:"Document License"}})]),t._v(" "),n("a",{staticStyle:{display:"inline-block"},attrs:{href:"https://www.apache.org/licenses/LICENSE-2.0",target:"_blank"}},[n("img",{attrs:{src:"https://icyfenix.cn/images/License-Apache.svg",alt:"License"}})]),t._v(" "),n("a",{staticStyle:{display:"inline-block"},attrs:{href:"mailto:icyfenix@gmail.com",target:"_blank"}},[n("img",{attrs:{src:"https://icyfenix.cn/images/Author-IcyFenix-blue.svg",alt:"Mail to Author"}})])]),t._v(" "),n("p",[t._v("如果你此时并不曾了解过什么是“The Fenix Project”，建议先阅读"),n("a",{attrs:{href:"https://icyfenix.cn/introduction/about-the-fenix-project.html"}},[t._v("这部分内容")]),t._v("。")]),t._v(" "),n("p",[t._v("Fenix's Bookstore 的主要目的是展示不同的后端技术架构，相对而言，前端并非其重点。不过，前端的页面是比起后端各种服务来要直观得多，能让使用者更容易理解我们将要做的是一件什么事情。假设你是一名驾驶初学者，合理的学习路径肯定应该是把汽车发动，然后慢慢行驶起来，而不是马上从“引擎动力原理”、“变速箱构造”入手去设法深刻地了解一台汽车。所以，先来运行程序，看看最终的效果是什么样子吧。")]),t._v(" "),n("h2",{attrs:{id:"运行程序"}},[t._v("运行程序")]),t._v(" "),n("p",[t._v("以下几种途径，可以马上浏览最终的效果：")]),t._v(" "),n("ul",[n("li",[t._v("从互联网已部署（由"),n("a",{attrs:{href:"https://travis-ci.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Travis-CI"),n("OutboundLink")],1),t._v("提供支持）的网站（由"),n("a",{attrs:{href:"https://pages.github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Pages"),n("OutboundLink")],1),t._v("提供主机），直接在浏览器访问： "),n("a",{attrs:{href:"http://bookstore.icyfenix.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://bookstore.icyfenix.cn/"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("li",[t._v("通过 Docker 容器方式运行："),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ docker run -d -p "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(":80 --name bookstore icyfenix/bookstore:frontend\n")])])]),t._v("然后在浏览器访问："),n("a",{attrs:{href:"http://localhost",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("通过 Git 上的源码，以开发模式运行："),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 克隆获取源码")]),t._v("\n $ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/fenixsoft/fenix-bookstore-frontend.git\n\n "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入工程根目录")]),t._v("\n $ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" fenix-bookstore-frontend\n\n "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装工程依赖")]),t._v("\n $ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n\n "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以开发模式运行，地址为localhost:8080")]),t._v("\n $ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run dev\n")])])]),t._v("然后在浏览器访问："),n("a",{attrs:{href:"http://localhost:8080",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8080"),n("OutboundLink")],1)])]),t._v(" "),n("GitHubWrapper",[n("p",{attrs:{align:"center"}},[n("img",{attrs:{src:"https://raw.githubusercontent.com/fenixsoft/awesome-fenix/master/.vuepress/public/images/sshot.jpg"}})])]),t._v(" "),n("p",[t._v("也许你已注意到，以上这些运行方式，均没有涉及到任何的服务端、数据库的部署。现代软件工程里，基于 MVVM 的工程结构使得前、后端的开发可以完全分离，只要互相约定好服务的位置及模型即可。Fenix's Bookstore 以开发模式运行时，会自动使用 Mock.js 拦截住所有的远程服务请求，并以事先准备好的数据来完成对这些请求的响应。")]),t._v(" "),n("p",[t._v("同时，你也应当注意到，以纯前端方式运行的时候，所有对数据的修改请求实际都是无效的。譬如用户注册，无论你输入何种用户名、密码，由于请求的响应是静态预置的，所以最终都会以同一个预设的用户登陆。也是因此，我并没有提供”默认用户“、”默认密码“一类的信息供用户使用，你可以随意输入即可登陆。")]),t._v(" "),n("p",[t._v("不过，那些只维护在前端的状态依然是可以变动的，典型的如对购物车、收藏夹的增删改。让后端服务保持无状态，而把状态维持在前端中的设计，对服务的伸缩性和系统的鲁棒性都有着极大的益处，多数情况下都是值得倡导的良好设计。而其伴随而来的状态数据导致请求头变大、链路安全性等问题，都会在服务端部分专门讨论和解决。")]),t._v(" "),n("h2",{attrs:{id:"构建产品"}},[t._v("构建产品")]),t._v(" "),n("p",[t._v("当你将程序用于正式部署时，一般不应部署开发阶段的程序，而是要进行产品化（Production）与精简化（Minification），你可以通过以下命令，由 node.js 驱动 webpack 来自动完成：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编译前端代码")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build\n")])])]),n("p",[t._v("或者使用--report 参数，同时输出依赖分析报告：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编译前端代码并生成报告")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build --report\n")])])]),n("p",[t._v("编译结果存放在/dist 目录中，应将其拷贝至 Web 服务器的根目录使用。对于 Fenix‘s Bookstore 的各个服务端而言，则通常是拷贝到网关工程中静态资源目录下。")]),t._v(" "),n("h2",{attrs:{id:"与后端联调"}},[t._v("与后端联调")]),t._v(" "),n("p",[t._v("同样出于前后端分离的目的，理论上后端通常只应当依据约定的服务协议（接口定义、访问传输方式、参数及模型结构、服务水平协议等）提供服务，并以此为依据进行不依赖前端的独立测试，最终集成时使用的是编译后的前端产品。")]),t._v(" "),n("p",[t._v("不过，在开发期就进行的前后端联合在现今许多企业之中仍是主流形式，由一个人“全栈式”地开发某个功能时更是如此，因此，当要在开发模式中进行联调时，需要修改项目根目录下的 main.js 文件，使其"),n("strong",[t._v("不")]),t._v("导入 Mock.js，即如下代码所示的条件语句判断为假：")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 默认在开发模式中启用mock.js代替服务端请求\n * 如需要同时调试服务端，请修改此处判断条件\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eslint-disable-next-line no-constant-condition")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MOCK")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./api/mock'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("也有其他一些相反的情况，需要在生产包中仍然继续使用 Mock.js 提供服务时（譬如 Docker 镜像 icyfenix/bookstore:frontend 就是如此），同样应修改该条件，使其结果为真，在开发模式依然导入了 Mock.js 即可。")]),t._v(" "),n("h2",{attrs:{id:"工程结构"}},[t._v("工程结构")]),t._v(" "),n("p",[t._v("Fenix's Bookstore 的工程结构完全符合 vue.js 工程的典型习惯，事实上它在建立时就是通过 vue-cli 初始化的。此工程的结构与其中各个目录的作用主要如下所示：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("+---build                           webpack编译配置，该目录的内容一般不做改动\n+---config                          webpack编译配置，用户需改动的内容提取至此\n+---dist                            编译输出结果存放的位置\n+---markdown                        与项目无关，用于支持markdown的资源（如图片）\n+---src\n|   +---api                         本地与远程的API接口\n|   |   +---local                   本地服务，如localStorage、加密等\n|   |   +---mock                    远程API接口的Mock\n|   |   |   \\---json                Mock返回的数据\n|   |   \\---remote                  远程服务\n|   +---assets                      资源文件，会被webpack哈希和压缩\n|   +---components                  vue.js的组件目录，按照使用页面的结构放置\n|   |   +---home\n|   |   |   +---cart\n|   |   |   +---detail\n|   |   |   \\---main\n|   |   \\---login\n|   +---pages                       vue.js的视图目录，存放页面级组件\n|   |   \\---home\n|   +---plugins                     vue.js的插件，如全局异常处理器\n|   +---router                      vue-router路由配置\n|   \\---store                       vuex状态配置\n|       \\---modules                 vuex状态按名空间分隔存放\n\\---static                          静态资源，编译时原样打包，不会做哈希和压缩\n")])])]),n("h2",{attrs:{id:"组件"}},[t._v("组件")]),t._v(" "),n("p",[t._v("Fenix's Bookstore 前端部分基于以下开源组件和免费资源构建：")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue.js"),n("OutboundLink")],1),t._v("：渐进式 JavaScript 框架")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://element.eleme.cn/#/zh-CN",target:"_blank",rel:"noopener noreferrer"}},[t._v("Element"),n("OutboundLink")],1),t._v("：一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/axios/axios",target:"_blank",rel:"noopener noreferrer"}},[t._v("Axios"),n("OutboundLink")],1),t._v("：Promise based HTTP client for the browser and node.js")]),t._v(" "),n("li",[n("a",{attrs:{href:"http://mockjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mock.js"),n("OutboundLink")],1),t._v("：生成随机数据，拦截 Ajax 请求")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://www.designevo.com/cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("DesignEvo"),n("OutboundLink")],1),t._v("：一款由 PearlMountain 有限公司设计研发的 logo 设计软件")])]),t._v(" "),n("h2",{attrs:{id:"协议"}},[t._v("协议")]),t._v(" "),n("ul",[n("li",[t._v("本作品代码部分采用"),n("a",{attrs:{href:"https://www.apache.org/licenses/LICENSE-2.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apache 2.0 协议"),n("OutboundLink")],1),t._v("进行许可。遵循许可的前提下，你可以自由地对代码进行修改，再发布，可以将代码用作商业用途。但要求你：\n"),n("ul",[n("li",[n("strong",[t._v("署名")]),t._v("：在原有代码和衍生代码中，保留原作者署名及代码来源信息。")]),t._v(" "),n("li",[n("strong",[t._v("保留许可证")]),t._v("：在原有代码和衍生代码中，保留 Apache 2.0 协议文件。")])])]),t._v(" "),n("li",[t._v("本作品文档部分采用"),n("a",{attrs:{href:"http://creativecommons.org/licenses/by/4.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("知识共享署名 4.0 国际许可协议"),n("OutboundLink")],1),t._v("进行许可。 遵循许可的前提下，你可以自由地共享，包括在任何媒介上以任何形式复制、发行本作品，亦可以自由地演绎、修改、转换或以本作品为基础进行二次创作。但要求你：\n"),n("ul",[n("li",[n("strong",[t._v("署名")]),t._v("：应在使用本文档的全部或部分内容时候，注明原作者及来源信息。")]),t._v(" "),n("li",[n("strong",[t._v("非商业性使用")]),t._v("：不得用于商业出版或其他任何带有商业性质的行为。如需商业使用，请联系作者。")]),t._v(" "),n("li",[n("strong",[t._v("相同方式共享的条件")]),t._v("：在本文档基础上演绎、修改的作品，应当继续以知识共享署名 4.0 国际许可协议进行许可。")])])])])],1)}),[],!1,null,null,null);e.default=a.exports}}]);