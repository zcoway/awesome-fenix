(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{517:function(e,t,r){e.exports=r.p+"assets/img/1.46b06e95.gif"},518:function(e,t,r){e.exports=r.p+"assets/img/3.f8079228.gif"},519:function(e,t,r){e.exports=r.p+"assets/img/4.e7edf9b1.gif"},520:function(e,t,r){e.exports=r.p+"assets/img/5.f990f75a.gif"},521:function(e,t,r){e.exports=r.p+"assets/img/7.f18e9263.gif"},522:function(e,t,r){e.exports=r.p+"assets/img/8.f85b31b7.gif"},523:function(e,t,r){e.exports=r.p+"assets/img/9.47decae0.gif"},524:function(e,t,r){e.exports=r.p+"assets/img/10.5566132c.gif"},699:function(e,t,r){"use strict";r.r(t);var s=r(11),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"fenix-cli：交互式云原生客户端"}},[e._v("Fenix-CLI：交互式云原生客户端")]),e._v(" "),s("p",[s("a",{staticClass:"not-print",staticStyle:{display:"inline-block"},attrs:{href:"https://travis-ci.com/fenixsoft/fenix-cli",target:"_blank"}},[s("img",{attrs:{src:"https://api.travis-ci.com/fenixsoft/fenix-cli.svg?branch=main",alt:"Travis-CI"}})]),e._v(" "),s("a",{staticStyle:{display:"inline-block"},attrs:{href:"https://icyfenix.cn/introduction/about-me.html",target:"_blank"}},[s("img",{attrs:{src:"https://raw.githubusercontent.com/fenixsoft/awesome-fenix/master/.vuepress/public/images/Author-IcyFenix-blue.svg",alt:"About Author"}})]),e._v(" "),s("a",{staticStyle:{display:"inline-block"},attrs:{href:"https://www.apache.org/licenses/LICENSE-2.0",target:"_blank"}},[s("img",{attrs:{src:"https://raw.githubusercontent.com/fenixsoft/awesome-fenix/master/.vuepress/public/images/License-Apache.svg",alt:"License"}})]),e._v(" "),s("a",{staticStyle:{display:"inline-block"},attrs:{href:"https://github.com/fenixsoft/fenix-cli/releases",target:"_blank"}},[s("img",{attrs:{src:"https://raw.githubusercontent.com/fenixsoft/awesome-fenix/master/.vuepress/public/images/Release-v1.svg",alt:"License"}})])]),e._v(" "),s("p",[e._v("Fenix-CLI是一款交互式的云原生运行环境客户端，目标是取代Docker的"),s("code",[e._v("docker cli")]),e._v("、Kubernetes的"),s("code",[e._v("kubectl")]),e._v("以及Istio的"),s("code",[e._v("istioctl")]),e._v("等命令行工具，提供具备操作一致性、具有额外指令增强、支持智能感知的交互式的终端界面。")]),e._v(" "),s("h2",{attrs:{id:"特性"}},[e._v("特性")]),e._v(" "),s("p",[e._v("对比Docker、Kubernetes、Istio官方原版的客户端，Fenix-CLI具有如下特性：")]),e._v(" "),s("ol",[s("li",[s("strong",[e._v("多运行环境支持")]),s("br"),e._v("Fenix-CLI目前支持Docker、Kubernetes和Istio三种执行环境，后续计划扩展到OpenShift、Rancher、Podman、Containerd等其他常用的云原生环境。启动时会自动进行检测，列出已安装的环境供用户选择，运行时也可以使用快捷键"),s("code",[e._v("F2")]),e._v("随时切换。")])]),e._v(" "),s("p",[s("img",{attrs:{src:r(517),alt:""}})]),e._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[e._v("静态指令自动补全功能")]),s("br"),e._v("Fenix-CLI支持官方原版客户端的所有指令、参数，并对指令和参数选项提供有自动补全与提示功能。其中大部分指令的介绍提示来源于以下官方参考文档：\n"),s("ul",[s("li",[s("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/cli/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.docker.com/engine/reference/commandline/cli/"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://istio.io/latest/docs/reference/commands/istioctl/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://istio.io/latest/docs/reference/commands/istioctl/"),s("OutboundLink")],1)])])])]),e._v(" "),s("p",[s("img",{attrs:{src:r(518),alt:""}})]),e._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("strong",[e._v("动态上下文数据的智能感知")]),s("br"),e._v("除了静态的指令提示外，Fenix-CLI还能对当前环境中的动态数据进行感知。譬如Docker中的容器和镜像名称、运行状态；Kubernetes中的Pod、Deployment、Service等各类资源名称及状态；还有端口号、操作系统的文件目录信息进行提示和自动补全。目前支持的动态数据包括有：\n"),s("ul",[s("li",[e._v("Docker：\n"),s("ul",[s("li",[e._v("镜像名称及状态信息")]),e._v(" "),s("li",[e._v("容器名称及状态信息")]),e._v(" "),s("li",[e._v("内部信息，如：容器暴露的端口号、文件路径等的提示")])])]),e._v(" "),s("li",[e._v("Kubernetes / Istio：\n"),s("ul",[s("li",[e._v("各种资源的名称及状态：Pod、ComponentStatus、ConfigMap、Context、DeamonSet、Deployment、Endpoint、Ingress、Job、LimitRange、Node、Namespace、PersistentVolume、PodSecurityPolicy、PodTemplete、ReplicataSet、ReplicationController、ResourceQuota、ServiceAccount、Container、Events")]),e._v(" "),s("li",[e._v("全局信息，如：集群上下文和命名空间等的提示")]),e._v(" "),s("li",[e._v("内部信息，如：服务的暴露的端口号、文件路径等的提示")])])])])])]),e._v(" "),s("p",[s("img",{attrs:{src:r(519),alt:""}})]),e._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("strong",[e._v("交互式的批量操作")]),s("br"),e._v("为方便同时管理多项资源，Fenix-CLI提供了交互式的CUI操作，支持单选、复选、快速过滤等功能，以满足一次性对多个资源进行同类操作。")])]),e._v(" "),s("p",[s("img",{attrs:{src:r(520),alt:""}})]),e._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[s("strong",[e._v("X指令")]),s("br"),e._v("除了直接支持原版客户端全部标准指令之外，Fenix-CLI还额外扩展了一系列以"),s("code",[e._v("x-")]),e._v("开头的专有指令。这些X指令是Fenix-CLI的主要价值所在，具体可通过"),s("code",[e._v("F1")]),e._v("或者"),s("code",[e._v("x-help")]),e._v("进行查看。"),s("br"),e._v("Fenix-CLI中有不少X指令依赖于开源的Krew Plugin来支持，为最大限度简化插件安装，Fenix-CLI的代码已集成Kubernetes的"),s("a",{attrs:{href:"https://github.com/kubernetes-sigs/krew",target:"_blank",rel:"noopener noreferrer"}},[e._v("Krew"),s("OutboundLink")],1),e._v("插件框架，因此无需任何额外操作即可使用全部Krew插件。下面对部分X指令功能列举如下：\n"),s("ul",[s("li",[e._v("切换Kubernetes集群上下文和名称空间"),s("br"),s("code",[e._v("x-context")]),e._v("用于切换当前Kubernetes客户端所管理的集群，适用于同一个客户端管理多个服务端集群的场合。"),s("br"),s("code",[e._v("x-namespace")]),e._v("用于切换当前Kubernetes客户端所使用的名称空间，以简化在每个命令中都要带有"),s("code",[e._v("--namespace <ns>")]),e._v("参数的繁琐操作。当前的名称空间将会在命令提示符之前列出。\n"),s("img",{attrs:{src:r(521),alt:""}})]),e._v(" "),s("li",[e._v("批量管理资源"),s("br"),s("code",[e._v("x-batch")]),e._v("用于批量管理资源，可以用于Docker环境下的容器和镜像，以及Kubernetes环境下的Pod、Deployment、Service等十余种常用资源。前面对交互式CUI的介绍中已演示了"),s("code",[e._v("x-batch")]),e._v("指令的用法。")]),e._v(" "),s("li",[e._v("网络流量跟踪"),s("br"),s("code",[e._v("x-sniff")]),e._v("用于记录Pod的网络流量。对于Gateway节点的流量，我们通常可以很方便地在浏览器上进行查看，但对微服务集群内部节点的网络访问，则较为不便，通常需要专门的追踪工具。"),s("code",[e._v("x-sniff")]),e._v("在无需安装任何追踪系统的前提下，通过自动注入tcpdump，将流量信息发送到TShark或者Wireshark进行分析（所以你的机器上还是需要安装了TShark或者Wireshark的）。同时，为简化TShark的复杂参数，默认提供了"),s("code",[e._v("summary")]),e._v("（只显示调用请求摘要）和"),s("code",[e._v("detail")]),e._v("（显示HTTP Header、Body全文）两种显示形式。该指令基于sniff插件实现："),s("a",{attrs:{href:"https://github.com/eldadru/ksniff",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/eldadru/ksniff"),s("OutboundLink")],1),e._v(" "),s("img",{attrs:{src:r(522),alt:""}})]),e._v(" "),s("li",[e._v("查看各资源间关系"),s("br"),s("code",[e._v("x-lens")]),e._v("指令用于通过Pod查询并显示相关资源之间的所有者关系。该指令基于pod-lens插件实现："),s("a",{attrs:{href:"https://github.com/sunny0826/kubectl-pod-lens",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/sunny0826/kubectl-pod-lens"),s("OutboundLink")],1),e._v(" "),s("img",{attrs:{src:r(523),alt:""}})]),e._v(" "),s("li",[e._v("快速访问服务"),s("br"),s("code",[e._v("x-open")]),e._v("用于根据服务暴露的端口，自动建立端口转发，并打开客户端中已安装的浏览器，直接访问该服务。该指令基于open-svc插件实现："),s("a",{attrs:{href:"https://github.com/superbrothers/kubectl-open-svc-plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/superbrothers/kubectl-open-svc-plugin"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("查看集群服务状态"),s("br"),s("code",[e._v("x-status")]),e._v("用于查看当前Kubernetes集群中哪些资源运行正常、哪些存在问题，简化了反复多次"),s("code",[e._v("kubectl get")]),e._v("的麻烦。该指令基于status插件实现："),s("a",{attrs:{href:"https://github.com/bergerx/kubectl-status",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/bergerx/kubectl-status"),s("OutboundLink")],1),e._v(" "),s("img",{attrs:{src:r(524),alt:""}})]),e._v(" "),s("li",[e._v("……")])])])]),e._v(" "),s("h2",{attrs:{id:"安装"}},[e._v("安装")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("自动安装：通过以下脚本，自动安装最新版的Fenix-CLI：")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -sL https://icyfenix.cn/fenix-cli/dl.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sh")]),e._v(" -\n")])])])]),e._v(" "),s("li",[s("p",[e._v("手动安装：如需其他版本，可在"),s("a",{attrs:{href:"https://github.com/fenixsoft/fenix-cli/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Release"),s("OutboundLink")],1),e._v("页面获取Fenix-CLI的可执行文件。")])]),e._v(" "),s("li",[s("p",[e._v("使用：安装后输入"),s("code",[e._v("fenix-cli")]),e._v("进行使用")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("fenix-cli\n")])])])]),e._v(" "),s("li",[s("p",[e._v("Fenix-CLI仅支持Linux操作系统")])])]),e._v(" "),s("h2",{attrs:{id:"规划"}},[e._v("规划")]),e._v(" "),s("p",[e._v("Fenix-CLI后续版本主要特性规划如下：")]),e._v(" "),s("ul",[s("li",[e._v("计划重构智能提示架构。目前静态指令的提示直接内置在程序代码之中，是以Docker v20.10.7（2021年6月）、Kubernetes v1.21（2021年4月）、Istio v1.10（2021年5月）为基准来实现的。随着官方客户端功能的不断发展扩充，靠程序代码去跟随必然难以为继。所幸目前主流的云原生客户端都是使用"),s("a",{attrs:{href:"spf13/cobra"}},[e._v("spf13/cobra")]),e._v("作为CLI框架的，因此下个大版本计划重构Fenix-CLI的智能提示架构，支持通过外部DSL来进行驱动，并实现直接从运行机器上的Docker、Kubernetes等环境中实时取得指令与参数信息，自动生成DSL，以此达到自动跟随官方客户端的升级的目的。")]),e._v(" "),s("li",[e._v("计划支持更多云原生运行环境，如OpenShift、Rancher、Podman、Containerd等。")]),e._v(" "),s("li",[e._v("计划支持更丰富的X指令，譬如：\n"),s("ul",[s("li",[s("code",[e._v("x-log")]),e._v("：自动聚合Pod的日志输出。目前"),s("code",[e._v("kubectl logs")]),e._v("只能监视单个Pod，计划提供一个命令，将微服务相关的多个Pod日志聚合到一个屏幕上滚动跟踪。")]),e._v(" "),s("li",[s("code",[e._v("x-debug")]),e._v("：容器高级调试能力。从Kubernetes 1.18起，提供了"),s("code",[e._v("kubectl debug")]),e._v("指令为Pod注入调试容器（1.15-1.17是Ephemeral Feature），计划寻找或制作一个带有常用网络工具又足够精简的瑞士军刀式调试镜像，让Fenix-CLI能够调用该镜像快速进入Pod进行问题诊断。")]),e._v(" "),s("li",[e._v("……")])])]),e._v(" "),s("li",[e._v("计划支持运行环境自动安装功能。由于中国网络状况限制，Kubernetes等环境需要访问Google仓库，安装十分不便，因此考虑在Fenix-CLI中提供运行环境一键部署的能力。此特性客户端的工作量不大，但服务端做自动从国外拉取镜像的机器人较为繁琐。")]),e._v(" "),s("li",[e._v("计划支持多语言，至少会提供中文语言的支持，有一定翻译工作量。")]),e._v(" "),s("li",[e._v("计划补全单元测试和E2E测试。")]),e._v(" "),s("li",[e._v("计划提供一些真实环境中使用Fenix-CLI去运维、诊断、出错的具体案例。")])]),e._v(" "),s("h2",{attrs:{id:"交流"}},[e._v("交流")]),e._v(" "),s("ul",[s("li",[e._v("建议：\n"),s("ul",[s("li",[e._v("如对Fenix-CLI本身的功能有问题或者建议，欢迎在此Repository中提出Issues。")]),e._v(" "),s("li",[e._v("如对Fenix-CLI所使用的Krew Plugin有问题或者建议，可在介绍里列出的这些Plugin的原Repository中提出。")])])]),e._v(" "),s("li",[e._v("贡献：\n"),s("ul",[s("li",[e._v("欢迎pull request、feature request，欢迎任何形式的协作。")])])]),e._v(" "),s("li",[e._v("致谢：\n"),s("ul",[s("li",[e._v("特别致谢"),s("a",{attrs:{href:"https://github.com/c-bata",target:"_blank",rel:"noopener noreferrer"}},[e._v("c-bata"),s("OutboundLink")],1),e._v("：Fenix-CLI项目的命令行提示框架基于"),s("a",{attrs:{href:"https://github.com/c-bata/go-prompt",target:"_blank",rel:"noopener noreferrer"}},[e._v("c-bata/go-prompt"),s("OutboundLink")],1),e._v("实现，部分Kubernetes提示功能直接使用到了"),s("a",{attrs:{href:"https://github.com/c-bata/kube-prompt",target:"_blank",rel:"noopener noreferrer"}},[e._v("c-bata/kube-prompt"),s("OutboundLink")],1),e._v("代码。")])])])]),e._v(" "),s("h2",{attrs:{id:"协议"}},[e._v("协议")]),e._v(" "),s("ul",[s("li",[e._v("本文档代码部分采用 Apache 2.0 协议进行许可。遵循许可的前提下，你可以自由地对代码进行修改，再发布，可以将代码用作商业用途。但要求你：\n"),s("ul",[s("li",[s("strong",[e._v("署名")]),e._v("：在原有代码和衍生代码中，保留原作者署名及代码来源信息。")]),e._v(" "),s("li",[s("strong",[e._v("保留许可证")]),e._v("：在原有代码和衍生代码中，保留 Apache 2.0 协议文件。")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);