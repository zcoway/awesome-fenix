(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{576:function(a,s,t){"use strict";t.r(s);var e=t(11),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"部署-elastic-stack"}},[a._v("部署 Elastic Stack")]),a._v(" "),t("p",[a._v("无状态应用在 Kubernetes 上部署和迁移都是很容易做到的，但是有状态应用的迁移相对还是有一定门槛，特别是部署对线上环境需要高可用的集群模式时则会更为麻烦，前面文章介绍过，现在比较好的针对有状态应用的部署方案是"),t("RouterLink",{attrs:{to:"/immutable-infrastructure/container/application-centric.html#operator与crd"}},[a._v("Operator")]),a._v("，市面上也的确出现了很多官方、非官方的 Operator，譬如 Prometheus Operator、Etcd Operator 等等，")],1),a._v(" "),t("p",[a._v("由于 Elasticsearch 的关系，ELK Stack 属于典型的有状态应用，Elastic.co 官方也推出了基于 Kubernetes Operator 的 Elastic Cloud on Kubernetes（ECK），用户可使用该产品在 Kubernetes 上较为轻松地配置、管理和运行 Elasticsearch 集群。")]),a._v(" "),t("h2",{attrs:{id:"elastic-cloud-on-kubernetes"}},[a._v("Elastic Cloud on Kubernetes")]),a._v(" "),t("p",[a._v("ECK 使用 Kubernetes Operator 模式构建而成，但它的功能并不局限于部署与迁移，下面为 Elastic.co 官方博客上对 ECK 的中文介绍，供你对 ECk 有个基本的了解：")]),a._v(" "),t("div",{staticClass:"quote"},[t("p",{staticClass:"title"},[a._v("官方博客《在 Kubernetes 上运行 Elasticsearch：开启新篇》")]),t("p",[t("code",[a._v("Elastic Cloud on Kubernetes(ECK)")]),a._v("是一个 Elasticsearch Operator，但远不止于此。 ECK 使用 Kubernetes Operator 模式构建而成，需要安装在您的 Kubernetes 集群内，其功能绝不仅限于简化 Kubernetes 上 Elasticsearch 和 Kibana 的部署工作这一项任务。ECK 专注于简化所有后期运行工作，例如：")]),a._v(" "),t("ul",[t("li",[a._v("管理和监测多个集群")]),a._v(" "),t("li",[a._v("轻松升级至新的版本")]),a._v(" "),t("li",[a._v("扩大或缩小集群容量")]),a._v(" "),t("li",[a._v("更改集群配置")]),a._v(" "),t("li",[a._v("动态调整本地存储的规模（包括 Elastic Local Volume（一款本地存储驱动器））")]),a._v(" "),t("li",[a._v("备份")])]),a._v(" "),t("p",[a._v("ECK 不仅能自动完成所有运行和集群管理任务，还专注于简化在 Kubernetes 上使用 Elasticsearch 的完整体验。ECK 的愿景是为 Kubernetes 上的 Elastic 产品和解决方案提供 SaaS 般的体验。 在 ECK 上启动的所有 Elasticsearch 集群都默认受到保护，这意味着在最初创建的那一刻便已启用加密并受到默认强密码的保护。")]),a._v(" "),t("blockquote",[t("p",[a._v("从 6.8 和 7.1 版本开始，Elasticsearch 核心安全功能（TLS 加密、基于角色的访问控制，以及文件和原生身份验证）会免费提供。")])]),a._v(" "),t("p",[a._v("通过 ECK 部署的所有集群都包括强大的基础（免费）级功能，例如可实现密集存储的冻结索引、Kibana Spaces、Canvas、Elastic Maps，等等。您甚至可以使用 Elastic Logs 和 Elastic Infrastructure 应用监测 Kubernetes 日志和基础设施。您可以获得在 Kubernetes 上使用 Elastic Stack 完整功能的体验。")]),a._v(" "),t("p",[a._v("ECK 内构建了 Elastic Local Volume，这是一个适用于 Kubernetes 的集成式存储驱动器。ECK 中还融入了很多最佳实践，例如在缩小规模之前对节点进行 drain 操作，在扩大规模的时候对分片进行再平衡，等等。从确保在配置变动过程中不会丢失数据，到确保在规模调整过程中实现零中断。")]),a._v(" "),t("div",{staticClass:"custom-block right"},[t("p",[a._v("—— "),t("a",{attrs:{href:"https://www.elastic.co/cn/blog/author/anurag-gupta",target:"_blank",rel:"noopener noreferrer"}},[a._v("Anurag Gupta"),t("OutboundLink")],1),a._v("，"),t("a",{attrs:{href:"https://www.elastic.co/cn/blog/introducing-elastic-cloud-on-kubernetes-the-elasticsearch-operator-and-beyond",target:"_blank",rel:"noopener noreferrer"}},[a._v("Elasticsearch on Kubernetes: A New Chapter Begins"),t("OutboundLink")],1)])])]),t("h2",{attrs:{id:"安装-eck"}},[a._v("安装 ECK")]),a._v(" "),t("p",[a._v("由于 Elasticsearch 是相对重量级的应用，建议你的 Kubernetes 每个节点至少有 4 至 8 GB 的可用内存。ECK 支持的最低软件版本如下所示：")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("kubectl 1.11+")]),a._v(" "),t("li",[a._v("Kubernetes 1.12+ or OpenShift 3.11+")]),a._v(" "),t("li",[a._v("Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)")]),a._v(" "),t("li",[a._v("Elasticsearch, Kibana, APM Server: 6.8+, 7.1+")]),a._v(" "),t("li",[a._v("Enterprise Search: 7.7+")]),a._v(" "),t("li",[a._v("Beats: 7.0+")])])]),a._v(" "),t("p",[a._v("首先在集群中安装 ECK 对应的 Operator 资源对象：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ kubectl apply -f https://download.elastic.co/downloads/eck/1.2.1/all-in-one.yaml\n")])])]),t("p",[a._v("安装成功后，会自动创建一个"),t("code",[a._v("elastic-system")]),a._v("的名称空间以及一个 Operator 的 Pod：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ kubectl get pods -n elastic-system\nNAME                             READY   STATUS    RESTARTS   AGE\nelastic-operator-0               "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("          15h\n")])])]),t("p",[a._v("你可以通过以下命令来查看 Operator 的工作日志：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ kubectl -n elastic-system logs -f statefulset.apps/elastic-operator\n")])])]),t("h2",{attrs:{id:"部署-elasticsearch-集群"}},[a._v("部署 Elasticsearch 集群")]),a._v(" "),t("p",[a._v("有 ECK Operator 的帮助，你可以直接使用类型为"),t("code",[a._v("Elasticsearch")]),a._v("的自定义资源来部署 Elasticsearch 集群，以下命令部署一套节点个数为 1，版本为 7.9.2 的 Elasticsearch 集群：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v("EOF "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" kubectl apply -f -\napiVersion: elasticsearch.k8s.elastic.co/v1\nkind: Elasticsearch\nmetadata:\n  name: quickstart\nspec:\n  version: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("7.9")]),a._v(".2\n  nodeSets:\n  - name: default\n    count: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n    config:\n      node.master: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n      node.data: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n      node.ingest: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n      node.store.allow_mmap: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\nEOF\n")])])]),t("p",[a._v("该命令执行完毕后，Pod、Service 均已自动生成，你可以使用一下命令验证：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ kubectl get elasticsearch\nNAME          HEALTH    NODES     VERSION   PHASE         AGE\nquickstart    green     "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("7.9")]),a._v(".2     Ready         1m\n\n$ kubectl get "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" quickstart-es-http\nNAME                 TYPE        CLUSTER-IP      EXTERNAL-IP   PORT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("S"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("    AGE\nquickstart-es-http   ClusterIP   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10.15")]),a._v(".251.145   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9200")]),a._v("/TCP   34m\n")])])]),t("p",[a._v("你只要获取访问凭证，就可以通过 HTTP 访问到 Elasticsearch 服务，获取访问凭证的操作如下：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("PASSWORD")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("kubectl get secret quickstart-es-elastic-user -o go-template"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{{.data.elastic | base64decode}}'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])]),t("p",[a._v("通过 HTTP 访问 Elasticsearch 服务的操作如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('$ curl -u "elastic:$PASSWORD" -k "https://quickstart-es-http:9200"\n')])])]),t("p",[a._v("如果需要在外部访问，通过 Kubernetes 的端口转发即可实现：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ kubectl port-forward service/quickstart-es-http "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9200")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在另一个Console中：")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -u "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"elastic:'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$PASSWORD")]),a._v('"')]),a._v(" -k "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://localhost:9200"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"name"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"quickstart-es-default-0"')]),a._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cluster_name"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"quickstart"')]),a._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cluster_uuid"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"XqWg0xIiRmmEBg4NMhnYPg"')]),a._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"version"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(",\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tagline"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"You Know, for Search"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h2",{attrs:{id:"部署-kibana"}},[a._v("部署 Kibana")]),a._v(" "),t("p",[a._v("与部署 Elasticsearch 集群类似，使用类型为"),t("code",[a._v("Kibana")]),a._v("的自定义资源即可快速部署 Kibana 实例，命令如下所示：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v("EOF "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" kubectl apply -f -\napiVersion: kibana.k8s.elastic.co/v1\nkind: Kibana\nmetadata:\n  name: quickstart\nspec:\n  version: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("7.9")]),a._v(".2\n  count: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n  elasticsearchRef:\n    name: quickstart\nEOF\n")])])]),t("p",[a._v("你可以通过集群 ClusterIP 及 5601 端口来访问 Kibana，或者进行端口转发到外部：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ kubectl port-forward service/quickstart-kb-http "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5601")]),a._v("\n")])])]),t("p",[a._v("当你从浏览器登录 Kibana 时候需要凭证，通过如下方式获取：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ kubectl get secret quickstart-es-elastic-user -o"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("jsonpath"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{.data.elastic}'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" base64 --decode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);